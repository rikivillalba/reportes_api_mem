name: Run R Script (commit action)

on:
  workflow_dispatch: 
 # schedule:
 #   - cron: '20 15 * * *'  # Runs daily at midnight
  
jobs:
  run-r-script:
    outputs:
      datetime: ${{ env.datetime }}
      artifact-url: ${{ steps.upload-plot-artifact.outputs.artifact-url }} 
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.1.0'                           # Specify the R version you need
    - name: Set environment variables
      shell: bash
      run: |
        datetime=$(date -u +"%Y%m%dT%H%M%SZ")
        echo "datetime=${datetime}" >> $GITHUB_ENV      
        echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
        echo "OS_VERSION=$(Rscript -e 'cat(sessionInfo()$running)')" >> $GITHUB_ENV
        echo "R_VERSION=$(Rscript -e 'cat(R.Version()$version.string)')" >> $GITHUB_ENV
    - name: Restore Renv package cache
      uses: actions/cache@v4
      with:
        path: ${{ env.RENV_PATHS_ROOT }}
        key: ${{ env.OS_VERSION }}-${{ env.R_VERSION }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
        restore-keys: ${{ env.OS_VERSION }}-${{ env.R_VERSION }}-${{ inputs.cache-version }}-
    - name: Install and activate renv and dependencies.
      shell: Rscript {0}
      run: |
        install.packages("renv")
        renv::activate()
        if (!renv::status()$synchronized) renv::snapshot()
        install.packages(c("ggplot2", "jsonlite", "data.table"));
    - name: Checkout repository
      uses: actions/checkout@v3
      # ^ Esta acción también descarga demanda_diaria_GBA.txt y demanda_diaria_Edesur.txt del repo.
    - name: Run R script and save plot
      run: |
        Rscript demanda_diaria_API_MEM.R    
        mv demanda_diaria.png demanda_diaria_${{ env.datetime }}.png
    - name: Upload plot as artifact
      id: upload-plot-artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.run_id }}_demanda_diaria_${{ env.datetime }}
        path: demanda_diaria_${{ env.datetime }}.png
    - name: add updated data files
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add demanda_diaria_Edesur.txt demanda_diaria_GBA.txt
        if ! git diff-index --quiet HEAD ; then echo "must_commit=yes" >> $GITHUB_ENV ; fi
      # ^ https://stackoverflow.com/questions/8123674/how-to-git-commit-nothing-without-an-error
    - name: commit and push if any change     
      if: env.must_commit == 'yes'
      run: |
        git commit -m "Actions run_id=${{ github.run_id }}, dt=${{ env.datetime }}"
        git push

  send-email:
    runs-on: ubuntu-latest
    needs: run-r-script
    env:
      datetime: ${{ needs.run-r-script.outputs.datetime }}
      artifact-url: ${{ needs.run-r-script.outputs.artifact-url }}      
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: ${{ github.run_id }}_demanda_diaria_${{ env.datetime }}
      - name: Send email (GitHub Actions)
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: smtp.gmail.com
          server_port: 465
          username: ${{ secrets.EMAIL_USERNAME }}
          password: ${{ secrets.EMAIL_PASSWORD }}
          subject: GitHub Actions Notification
          body: | 
            Informe de demanda diaria
            Fecha de ejecución: ${{ env.datetime }}
            [descargar zip artifact](${{ env.artifact-url }})
            ![plot](./demanda_diaria_${{ env.datetime }}.png)
          # Dirección obtenida para grupo de teams
          to: 7fd2381b.enelcom.onmicrosoft.com@emea.teams.ms
          from: GitHub Actions <noreply@github.com>
          attachments: demanda_diaria_${{ env.datetime }}.png
          security: strict
           
   
