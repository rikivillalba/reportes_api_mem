name: Run R Script (commit action)

on:
  schedule:
    - cron: '20 15 * * *'  # Runs daily at midnight
  workflow_dispatch:
  
jobs:
  run-r-script:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      # Esta acción también descarga demanda_diaria_GBA.txt y demanda_diaria_Edesur.txt del repo.
      uses: actions/checkout@v3
    - name: Install deps
      run: sudo apt-get update && sudo apt-get install libcurl4-openssl-dev
    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with: { r-version: '4.1.0' }  # Specify the R version you need
    - name: Set RENV_PATHS_ROOT and datetime
      shell: bash
      run: |
        datetime=$(date -u +"%Y%m%dT%H%M%SZ")
        echo "datetime=${datetime}" >> $GITHUB_ENV      
        echo "RENV_PATHS_ROOT=${{ runner.temp }}/renv" >> $GITHUB_ENV
    - name: Install and activate renv
      shell: Rscript {0}
      run: |
        install.packages("renv")
        renv::activate()
    - name: Get R and OS version
      shell: Rscript {0}
      run: |
        cat(sprintf("OS_VERSION=%s\n", sessionInfo()$running), append=TRUE, file=Sys.getenv("GITHUB_ENV"));
        cat(sprintf("R_VERSION=%s\n", R.Version()$version.string), append=TRUE, file=Sys.getenv("GITHUB_ENV")); 
    - name: Restore Renv package cache
      uses: actions/cache@v4
      with:
        path: ${{ env.RENV_PATHS_ROOT }}
        key: ${{ env.OS_VERSION }}-${{ env.R_VERSION }}-${{ inputs.cache-version }}-${{ hashFiles('renv.lock') }}
        restore-keys: ${{ env.OS_VERSION }}-${{ env.R_VERSION }}-${{ inputs.cache-version }}-
    - name: Install R packages (or pull from cache)
      shell: Rscript {0}
      run: |
        install.packages(c("httr", "ggplot2", "jsonlite", "data.table"));
    - name: Run R script
      run: |
        Rscript demanda_diaria_API_MEM.R    
    - name: add updated data files
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add demanda_diaria_Edesur.txt demanda_diaria_GBA.txt
        if git diff-index --quiet HEAD ; then echo "must_commit=yes" >> $GITHUB_ENV ; fi
      #   ^ https://stackoverflow.com/questions/8123674/how-to-git-commit-nothing-without-an-error
    - name: commit and push if any change     
      if: env.must_commit == 'yes'
      run: |
        git commit -m "Actions run_id=${{ github.run_id }}, dt=${{ env.datetime }}"
        git push
    - name: Save plot
      run: |
        mv demanda_diaria.svg demanda_diaria_${{ env.datetime }}.svg
        echo "Plot saved as demanda_diaria_${{ env.datetime }}.svg"
    - name: Upload plot as artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ github.run_id }}_demanda_diaria_${{ env.datetime }}
        path: demanda_diaria_${{ env.datetime }}.svg

